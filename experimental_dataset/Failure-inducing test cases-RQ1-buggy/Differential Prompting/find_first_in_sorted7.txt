Yes, there is a test case that will produce different outputs for the three versions of `find_first_in_sorted` implementation. Here's the test case:

```
arr = [1, 2, 2, 3, 4, 5]
x = 2
```

The first implementation will return `1`, the second implementation will return `1`, and the third implementation will return `2`.

This happens because the second and third implementations use different conditions to update the `hi` variable. Specifically, the second implementation uses `hi = mid`, and the third implementation uses `hi = mid - 1`. In the test case above, the value `2` appears twice in the array `arr`. The first implementation finds the first occurrence of `2` and returns its index, which is `1`. The second implementation uses `hi = mid` and stops searching after finding the second occurrence of `2` at index `2`. The third implementation uses `hi = mid - 1` and correctly finds the first occurrence of `2` at index `1`.