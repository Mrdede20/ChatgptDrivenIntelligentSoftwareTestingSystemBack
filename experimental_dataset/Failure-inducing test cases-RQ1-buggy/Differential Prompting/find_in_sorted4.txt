Yes, there is an input that could make the two programs have different output. This can happen if the input array (arr) contains duplicate elements. In the first function, the binary search implementation might find a duplicate element that is not the first occurrence of the element in the input array, which can cause the function to return an index that is not the first occurrence of the element. However, the second function always returns the index of the first occurrence of the element.

Here's an example input that would demonstrate this difference:

```python
arr = [1, 2, 2, 3, 4, 5]
x = 2
print(find_in_sorted(arr, x))  
```

The first function would return 2, while the second function would return 1.