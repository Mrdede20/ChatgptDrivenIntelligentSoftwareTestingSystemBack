Yes, the two programs will have different outputs for a linked list where the last node's successor is itself.

Here is an example input that will produce different outputs:

```
class Node:
    def __init__(self, value, successor=None):
        self.value = value
        self.successor = successor

node1 = Node(1)
node2 = Node(2)
node3 = Node(3)
node4 = Node(4)
node5 = Node(5)

node1.successor = node2
node2.successor = node3
node3.successor = node4
node4.successor = node5
node5.successor = node5

print(detect_cycle(node1))  # expected output: True since the last node's successor is itself
```

The first implementation of `detect_cycle()` will return `True` and the second implementation will result in an infinite loop.