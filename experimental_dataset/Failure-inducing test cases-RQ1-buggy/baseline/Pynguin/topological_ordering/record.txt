# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import topological_ordering as module_0





#record_1
def test_case_0():

    set_0 = set()

    object_0 = module_0.topological_ordering(set_0)





#record_2
def test_case_1():

    str_0 = "e\x0c]O2.fY_"

    module_0.topological_ordering(str_0)





#record_3
def test_case_2():

    bool_0 = True

    module_0.topological_ordering(bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import topological_ordering as module_0





#record_4
def test_case_0():

    dict_0 = {}

    var_0 = module_0.topological_ordering(dict_0)





#record_5
def test_case_1():

    bytes_0 = b""

    var_0 = module_0.topological_ordering(bytes_0)

    str_0 = "%6`~Cbr&Hkp"

    module_0.topological_ordering(str_0)





#record_6
def test_case_2():

    bool_0 = False

    module_0.topological_ordering(bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import topological_ordering as module_0





#record_7
def test_case_0():

    set_0 = set()

    var_0 = module_0.topological_ordering(set_0)





#record_8
def test_case_1():

    bytes_0 = b"\x8elh\xc5\x81\x96\x1b\x9bC9\xe5\x16"

    module_0.topological_ordering(bytes_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import topological_ordering as module_0

import builtins as module_1





#record_9
def test_case_0():

    set_0 = set()

    var_0 = module_0.topological_ordering(set_0)





#record_10
def test_case_1():

    object_0 = module_1.object()

    set_0 = {object_0, object_0}

    module_0.topological_ordering(set_0)



