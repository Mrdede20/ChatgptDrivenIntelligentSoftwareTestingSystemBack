# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import kth as module_0





#record_1
def test_case_0():

    bool_0 = False

    list_0 = [bool_0]

    var_0 = module_0.kth(list_0, bool_0)

    assert var_0 is False





#record_2
def test_case_1():

    bool_0 = True

    module_0.kth(bool_0, bool_0)





#record_3
def test_case_2():

    bool_0 = True

    list_0 = [bool_0]

    module_0.kth(list_0, bool_0)





#record_4
def test_case_3():

    str_0 = "TLI"

    module_0.kth(str_0, str_0)





#record_5
def test_case_4():

    str_0 = "\x0c\x0c0UdhuF]${>\rVJ"

    module_0.kth(str_0, str_0)





#record_6
def test_case_5():

    bool_0 = False

    list_0 = [bool_0]

    float_0 = -2800.1360481410106

    module_0.kth(list_0, float_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import kth as module_0

import builtins as module_1





#record_7
def test_case_0():

    bool_0 = True

    tuple_0 = (bool_0, bool_0, bool_0)

    var_0 = module_0.kth(tuple_0, bool_0)

    assert var_0 is True





#record_8
def test_case_1():

    str_0 = "'-d`{/\\\x0c!\rJREV6)"

    dict_0 = {str_0: str_0, str_0: str_0}

    module_0.kth(str_0, dict_0)





#record_9
def test_case_2():

    object_0 = module_1.object()

    module_0.kth(object_0, object_0)





#record_10
def test_case_3():

    bool_0 = True

    float_0 = 1772.11

    tuple_0 = (bool_0, bool_0, float_0)

    module_0.kth(tuple_0, float_0)

