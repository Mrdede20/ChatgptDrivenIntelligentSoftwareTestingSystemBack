# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import breadth_first_search as module_0




#record_1
def test_case_0():

    str_0 = "Fs>"

    var_0 = module_0.breadth_first_search(str_0, str_0)

    assert var_0 is True




#record_2
def test_case_1():

    bool_0 = True

    none_type_0 = None

    module_0.breadth_first_search(bool_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import breadth_first_search as module_0




#record_3
def test_case_0():

    none_type_0 = None

    var_0 = module_0.breadth_first_search(none_type_0, none_type_0)

    assert var_0 is True




#record_4
def test_case_1():

    int_0 = -80

    none_type_0 = None

    module_0.breadth_first_search(int_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import breadth_first_search as module_0




#record_5
def test_case_0():

    int_0 = 2154

    var_0 = module_0.breadth_first_search(int_0, int_0)

    assert var_0 is True




#record_6
def test_case_1():

    bytes_0 = b"3\xe8pM\xe7\x00z\xb4\x9a\xd2D\xc1\x9e\xd9\xa0\xb4\xb6\x0f5\x16"

    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}

    module_0.breadth_first_search(bytes_0, set_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import breadth_first_search as module_0




#record_7
def test_case_0():

    bool_0 = True

    var_0 = module_0.breadth_first_search(bool_0, bool_0)

    assert var_0 is True




#record_8
def test_case_1():

    bool_0 = False

    str_0 = "v.v$ePABDvKovx]b%1="

    module_0.breadth_first_search(bool_0, str_0)




#record_9
def test_case_2():

    dict_0 = {}

    module_0.breadth_first_search(dict_0, dict_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import breadth_first_search as module_0




#record_10
def test_case_0():

    bytes_0 = b""

    var_0 = module_0.breadth_first_search(bytes_0, bytes_0)

    assert var_0 is True

