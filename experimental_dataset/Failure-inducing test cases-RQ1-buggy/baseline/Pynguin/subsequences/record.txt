# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import subsequences as module_0





#record_1
def test_case_0():

    bool_0 = False

    var_0 = module_0.subsequences(bool_0, bool_0, bool_0)





#record_2
def test_case_1():

    bytes_0 = b"\x10\xdd!\x08."

    module_0.subsequences(bytes_0, bytes_0, bytes_0)





#record_3
def test_case_2():

    bool_0 = True

    var_0 = module_0.subsequences(bool_0, bool_0, bool_0)





#record_4
def test_case_3():

    bool_0 = True

    bool_1 = False

    var_0 = module_0.subsequences(bool_1, bool_0, bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import subsequences as module_0





#record_5
def test_case_0():

    bool_0 = True

    bool_1 = False

    var_0 = module_0.subsequences(bool_1, bool_0, bool_0)





#record_6
def test_case_1():

    none_type_0 = None

    module_0.subsequences(none_type_0, none_type_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import subsequences as module_0





#record_7
def test_case_0():

    bool_0 = True

    bool_1 = False

    var_0 = module_0.subsequences(bool_1, bool_0, bool_0)





#record_8
def test_case_1():

    bytes_0 = b"\xa7\x19\x1e\taB<pc1\xb4"

    module_0.subsequences(bytes_0, bytes_0, bytes_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import subsequences as module_0

import builtins as module_1





#record_9
def test_case_0():

    bool_0 = False

    var_0 = module_0.subsequences(bool_0, bool_0, bool_0)





#record_10
def test_case_1():

    object_0 = module_1.object()

    module_0.subsequences(object_0, object_0, object_0)



