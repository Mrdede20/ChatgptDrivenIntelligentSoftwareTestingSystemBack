# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import depth_first_search as module_0




#record_1
def test_case_0():

    tuple_0 = ()

    var_0 = module_0.depth_first_search(tuple_0, tuple_0)

    assert var_0 is True




#record_2
def test_case_1():

    bytes_0 = b"\xeb%\x93U#\xb9\xe1\xeeO\x037\xa5\xf0\xfdv\xe8"

    bool_0 = True

    module_0.depth_first_search(bool_0, bytes_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import depth_first_search as module_0




#record_3
def test_case_0():

    complex_0 = 213.25648 + 416.509j

    var_0 = module_0.depth_first_search(complex_0, complex_0)

    assert var_0 is True




#record_4
def test_case_1():

    bytes_0 = b"2\xba"

    bool_0 = True

    module_0.depth_first_search(bytes_0, bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import depth_first_search as module_0




#record_5
def test_case_0():

    bool_0 = False

    var_0 = module_0.depth_first_search(bool_0, bool_0)

    assert var_0 is True




#record_6
def test_case_1():

    str_0 = "f8"

    none_type_0 = None

    module_0.depth_first_search(str_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import depth_first_search as module_0




#record_7
def test_case_0():

    none_type_0 = None

    var_0 = module_0.depth_first_search(none_type_0, none_type_0)

    assert var_0 is True




#record_8
def test_case_1():

    none_type_0 = None

    var_0 = module_0.depth_first_search(none_type_0, none_type_0)

    assert var_0 is True

    module_0.depth_first_search(none_type_0, var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import depth_first_search as module_0




#record_9
def test_case_0():

    bytes_0 = b"\xbf\xd3\rbgA+\xde\xa8\xc5f^\xb8\x8f\x12\x92\xa6"

    var_0 = module_0.depth_first_search(bytes_0, bytes_0)

    assert var_0 is True




#record_10
def test_case_1():

    bool_0 = True

    none_type_0 = None

    module_0.depth_first_search(bool_0, none_type_0)


