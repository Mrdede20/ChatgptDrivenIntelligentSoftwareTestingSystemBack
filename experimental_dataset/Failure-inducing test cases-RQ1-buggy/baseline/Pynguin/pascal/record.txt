# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import pascal as module_0





#record_1
def test_case_0():

    int_0 = 501

    module_0.pascal(int_0)





#record_2
def test_case_1():

    bool_0 = False

    var_0 = module_0.pascal(bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import pascal as module_0





#record_3
def test_case_0():

    int_0 = 2

    var_0 = module_0.pascal(int_0)





#record_4
def test_case_1():

    bytes_0 = b"\xee"

    module_0.pascal(bytes_0)





#record_5
def test_case_2():

    int_0 = 2841

    module_0.pascal(int_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import pascal as module_0





#record_6
def test_case_0():

    int_0 = 925

    module_0.pascal(int_0)





#record_7
def test_case_1():

    bool_0 = True

    var_0 = module_0.pascal(bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import pascal as module_0





#record_8
def test_case_0():

    int_0 = 1464

    module_0.pascal(int_0)





#record_9
def test_case_1():

    int_0 = -2914

    var_0 = module_0.pascal(int_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import pascal as module_0





#record_10
def test_case_0():

    int_0 = 2450

    module_0.pascal(int_0)


