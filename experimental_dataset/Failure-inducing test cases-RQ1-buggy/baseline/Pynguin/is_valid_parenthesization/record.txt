# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import is_valid_parenthesization as module_0





#record_1
def test_case_0():

    str_0 = "3"

    var_0 = module_0.is_valid_parenthesization(str_0)

    assert var_0 is False





#record_2
def test_case_1():

    int_0 = 1042

    list_0 = [int_0, int_0, int_0, int_0]

    var_0 = module_0.is_valid_parenthesization(list_0)

    assert var_0 is False

    int_1 = 1373

    bytes_0 = b""

    var_1 = module_0.is_valid_parenthesization(bytes_0)

    tuple_0 = (int_1, int_1, int_1)

    var_2 = module_0.is_valid_parenthesization(tuple_0)

    assert var_2 is False

    module_0.is_valid_parenthesization(var_2)





#record_3
def test_case_2():

    none_type_0 = None

    module_0.is_valid_parenthesization(none_type_0)





#record_4
def test_case_3():

    str_0 = "(+Kw1v-8fJ9"

    var_0 = module_0.is_valid_parenthesization(str_0)

    assert var_0 is False

    str_1 = "73"

    var_1 = module_0.is_valid_parenthesization(str_1)

    assert var_1 is False

    module_0.is_valid_parenthesization(var_1)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import is_valid_parenthesization as module_0





#record_5
def test_case_0():

    bytes_0 = b"\x88\x068\xcan\xcc"

    var_0 = module_0.is_valid_parenthesization(bytes_0)

    assert var_0 is False





#record_6
def test_case_1():

    list_0 = []

    var_0 = module_0.is_valid_parenthesization(list_0)

    module_0.is_valid_parenthesization(var_0)





#record_7
def test_case_2():

    str_0 = "("

    var_0 = module_0.is_valid_parenthesization(str_0)

    assert var_0 is True

    bytes_0 = b"\x88\x068\xcan\xcc"

    var_1 = module_0.is_valid_parenthesization(bytes_0)

    assert var_1 is False





#record_8
def test_case_3():

    str_0 = "(u[.Q_"

    var_0 = module_0.is_valid_parenthesization(str_0)

    assert var_0 is False

    int_0 = -4400

    module_0.is_valid_parenthesization(int_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import is_valid_parenthesization as module_0

import builtins as module_1





#record_9
def test_case_0():

    str_0 = "&H6OLLw}ZQ8\rJ\x0c}5?Av"

    var_0 = module_0.is_valid_parenthesization(str_0)

    assert var_0 is False





#record_10
def test_case_1():

    str_0 = "y:Gv"

    var_0 = module_0.is_valid_parenthesization(str_0)

    assert var_0 is False

    dict_0 = {}

    var_1 = module_0.is_valid_parenthesization(dict_0)

    var_2 = module_0.is_valid_parenthesization(dict_0)

    var_3 = module_0.is_valid_parenthesization(str_0)

    assert var_3 is False

