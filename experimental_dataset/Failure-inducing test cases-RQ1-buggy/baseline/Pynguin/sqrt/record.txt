# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import sqrt as module_0

import builtins as module_1





#record_1
def test_case_0():

    bool_0 = False

    var_0 = module_0.sqrt(bool_0, bool_0)

    module_1.object(**var_0)





#record_2
def test_case_1():

    none_type_0 = None

    module_0.sqrt(none_type_0, none_type_0)





#record_3
def test_case_2():

    bool_0 = False

    var_0 = module_0.sqrt(bool_0, bool_0)

    var_1 = module_0.sqrt(var_0, bool_0)

    var_2 = module_0.sqrt(var_0, var_1)

    int_0 = -295

    module_0.sqrt(var_0, int_0)





#record_4
def test_case_3():

    bool_0 = False

    var_0 = module_0.sqrt(bool_0, bool_0)

    var_1 = module_0.sqrt(var_0, bool_0)

    var_2 = module_0.sqrt(var_1, bool_0)

    bool_1 = True

    var_3 = module_0.sqrt(bool_1, var_1)

    var_4 = module_0.sqrt(var_3, var_1)

    var_5 = module_0.sqrt(bool_0, var_3)

    var_6 = module_0.sqrt(bool_1, var_2)

    var_7 = module_0.sqrt(bool_1, var_0)

    var_8 = module_0.sqrt(var_2, var_7)

    var_9 = module_0.sqrt(var_8, var_6)

    var_10 = module_0.sqrt(var_6, var_9)

    var_11 = module_0.sqrt(var_8, var_5)

    list_0 = [var_1, var_11, bool_1]

    module_0.sqrt(var_1, list_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import sqrt as module_0

import builtins as module_1





#record_5
def test_case_0():

    bool_0 = True

    var_0 = module_0.sqrt(bool_0, bool_0)

    bytes_0 = b"\xe7{\xf4L\x14\x1c\x1f8\xe9\x83\xcbh\xba\x92e\x18\x07\xbb5"

    module_0.sqrt(bytes_0, bytes_0)





#record_6
def test_case_1():

    none_type_0 = None

    module_0.sqrt(none_type_0, none_type_0)





#record_7
def test_case_2():

    bool_0 = False

    var_0 = module_0.sqrt(bool_0, bool_0)

    int_0 = -259

    module_0.sqrt(var_0, int_0)





#record_8
def test_case_3():

    bool_0 = True

    var_0 = module_0.sqrt(bool_0, bool_0)

    var_1 = module_0.sqrt(var_0, bool_0)

    var_2 = module_0.sqrt(var_0, var_1)

    bytes_0 = b"m"

    var_3 = module_0.sqrt(bool_0, var_1)

    bool_1 = False

    var_4 = module_0.sqrt(var_1, var_3)

    var_5 = module_0.sqrt(bool_1, var_3)

    var_6 = module_0.sqrt(var_1, var_0)

    tuple_0 = (bytes_0,)

    var_7 = module_0.sqrt(var_1, bool_0)

    module_0.sqrt(bytes_0, tuple_0)





#record_9
def test_case_4():

    bool_0 = True

    var_0 = module_0.sqrt(bool_0, bool_0)

    var_1 = module_0.sqrt(bool_0, bool_0)

    var_2 = module_0.sqrt(var_0, var_1)

    bool_1 = False

    var_3 = module_0.sqrt(var_2, var_1)

    var_4 = module_0.sqrt(bool_1, bool_1)

    var_5 = module_0.sqrt(var_2, var_0)

    var_6 = module_0.sqrt(bool_1, var_1)

    var_7 = module_0.sqrt(bool_0, bool_1)

    var_8 = module_0.sqrt(var_4, bool_0)

    object_0 = module_1.object()

    module_1.object(**var_7)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import sqrt as module_0





#record_10
def test_case_0():

    bool_0 = True

    var_0 = module_0.sqrt(bool_0, bool_0)

    var_1 = module_0.sqrt(var_0, var_0)

    var_2 = module_0.sqrt(bool_0, var_1)

    var_3 = module_0.sqrt(var_2, var_1)




