# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import flatten as module_0

import builtins as module_1





#record_1
def test_case_0():

    float_0 = 1508.0

    var_0 = module_0.flatten(float_0)





#record_2
def test_case_1():

    str_0 = "n8!\n`^/.9u@tpZ[ gr("

    var_0 = module_0.flatten(str_0)

    module_1.object(*var_0)





#record_3
def test_case_2():

    str_0 = "t'3BEb|cGPp"

    bytes_0 = b"Tn\xd7\xe4\xc0\n"

    list_0 = [str_0, bytes_0]

    tuple_0 = (str_0, bytes_0, list_0)

    var_0 = module_0.flatten(str_0)

    var_1 = module_0.flatten(tuple_0)

    var_2 = module_0.flatten(str_0)

    bytes_1 = b"\xf1\x02e-\x86S\xdd\xe7t"

    var_3 = module_0.flatten(bytes_1)

    module_1.object(*var_1)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import flatten as module_0

import builtins as module_1





#record_4
def test_case_0():

    bool_0 = False

    var_0 = module_0.flatten(bool_0)

    var_1 = module_0.flatten(bool_0)





#record_5
def test_case_1():

    bool_0 = True

    dict_0 = {

        bool_0: bool_0,

        bool_0: bool_0,

        bool_0: bool_0,

        bool_0: bool_0,

        bool_0: bool_0,

        bool_0: bool_0,

    }

    var_0 = module_0.flatten(dict_0)

    module_1.object(*var_0)





#record_6
def test_case_2():

    bool_0 = True

    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}

    str_0 = "i.Nt1"

    bytes_0 = b'\xcd0\xb7"s'

    list_0 = [str_0, dict_0, bytes_0, str_0]

    tuple_0 = (str_0, bytes_0, list_0)

    var_0 = module_0.flatten(tuple_0)

    module_1.object(*var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import flatten as module_0

import builtins as module_1





#record_7
def test_case_0():

    bool_0 = False

    var_0 = module_0.flatten(bool_0)





#record_8
def test_case_1():

    str_0 = "\\o&i\x0bjZS&XM5t"

    var_0 = module_0.flatten(str_0)

    module_1.object(*var_0)





#record_9
def test_case_2():

    dict_0 = {}

    list_0 = [dict_0, dict_0, dict_0]

    tuple_0 = (dict_0, list_0)

    var_0 = module_0.flatten(dict_0)

    var_1 = module_0.flatten(list_0)

    object_0 = module_1.object(*var_0)

    var_2 = module_0.flatten(tuple_0)

    var_3 = module_0.flatten(tuple_0)

    var_4 = module_0.flatten(tuple_0)

    var_5 = module_0.flatten(var_1)

    var_6 = module_0.flatten(var_4)

    var_7 = module_0.flatten(list_0)

    object_1 = module_1.object()

    module_1.object(*var_4)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import flatten as module_0

import builtins as module_1





#record_10
def test_case_0():

    none_type_0 = None

    var_0 = module_0.flatten(none_type_0)


