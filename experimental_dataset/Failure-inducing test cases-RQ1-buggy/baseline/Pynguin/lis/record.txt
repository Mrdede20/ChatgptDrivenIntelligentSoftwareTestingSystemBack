# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import lis as module_0

import builtins as module_1





#record_1
def test_case_0():

    str_0 = ";|32'|+M\\ZMV3p\tG\t"

    var_0 = module_0.lis(str_0)

    assert var_0 == 2

    bytes_0 = b"\xc4\xd9\x9a\x00\xad`n\xe8"

    var_1 = module_0.lis(bytes_0)

    assert var_1 == 4

    var_2 = module_0.lis(bytes_0)

    assert var_2 == 4

    var_3 = module_0.lis(bytes_0)

    assert var_3 == 4





#record_2
def test_case_1():

    list_0 = []

    var_0 = module_0.lis(list_0)

    assert var_0 == 0





#record_3
def test_case_2():

    object_0 = module_1.object()

    module_0.lis(object_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import lis as module_0





#record_4
def test_case_0():

    int_0 = -5378

    bytes_0 = b"\xc0f"

    str_0 = "[(,"

    tuple_0 = (bytes_0, str_0, int_0)

    set_0 = {tuple_0}

    list_0 = []

    tuple_1 = (int_0, tuple_0, set_0, list_0)

    module_0.lis(tuple_1)





#record_5
def test_case_1():

    int_0 = -619

    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}

    list_0 = [dict_0]

    var_0 = module_0.lis(list_0)

    assert var_0 == 1

    tuple_0 = ()

    var_1 = module_0.lis(tuple_0)

    var_2 = module_0.lis(tuple_0)

    module_0.lis(var_1)





#record_6
def test_case_2():

    none_type_0 = None

    module_0.lis(none_type_0)





#record_7
def test_case_3():

    str_0 = "M$zj$\\li"

    var_0 = module_0.lis(str_0)

    assert var_0 == 3

    module_0.lis(var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import lis as module_0

import builtins as module_1





#record_8
def test_case_0():

    bytes_0 = b"\xbck\x98\xab-\xb2\xf1\xfd\x91\x1f\x05\x84\x9a"

    var_0 = module_0.lis(bytes_0)

    assert var_0 == 3

    complex_0 = 491.34634 + 672.70547j

    module_0.lis(complex_0)





#record_9
def test_case_1():

    object_0 = module_1.object()

    tuple_0 = ()

    var_0 = module_0.lis(tuple_0)

    assert var_0 == 0

    module_0.lis(var_0)





#record_10
def test_case_2():

    none_type_0 = None

    module_0.lis(none_type_0)


