# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import bitcount as module_0




#record_1
def test_case_0():

    bool_0 = True

    set_0 = {bool_0, bool_0}

    module_0.bitcount(set_0)




#record_2
def test_case_1():

    none_type_0 = None

    var_0 = module_0.bitcount(none_type_0)

    assert var_0 == 0


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import bitcount as module_0




#record_3
def test_case_0():

    bytes_0 = b"W:\xb0\x04\xb5"

    bool_0 = False

    tuple_0 = (bytes_0, bytes_0, bytes_0, bool_0)

    module_0.bitcount(tuple_0)




#record_4
def test_case_1():

    dict_0 = {}

    var_0 = module_0.bitcount(dict_0)

    assert var_0 == 0


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import bitcount as module_0




#record_5
def test_case_0():

    bool_0 = False

    list_0 = [bool_0, bool_0]

    module_0.bitcount(list_0)




#record_6
def test_case_1():

    none_type_0 = None

    var_0 = module_0.bitcount(none_type_0)

    assert var_0 == 0


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import bitcount as module_0




#record_7
def test_case_0():

    bool_0 = True

    dict_0 = {bool_0: bool_0, bool_0: bool_0}

    module_0.bitcount(dict_0)




#record_8
def test_case_1():

    none_type_0 = None

    var_0 = module_0.bitcount(none_type_0)

    assert var_0 == 0


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import bitcount as module_0




#record_9
def test_case_0():

    bytes_0 = b"\xc7\xa5/1\xf8\xea\xe8\xc6\xa2\x08\x1c\x04\xdcm"

    module_0.bitcount(bytes_0)




#record_10
def test_case_1():

    none_type_0 = None

    set_0 = {none_type_0}

    var_0 = module_0.bitcount(none_type_0)

    assert var_0 == 0

    module_0.bitcount(set_0)

