# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import shortest_path_length as module_0

import heapq as module_1





#record_1
def test_case_0():

    bool_0 = False

    var_0 = module_0.shortest_path_length(bool_0, bool_0, bool_0)

    assert var_0 == 0





#record_2
def test_case_1():

    bytes_0 = b"v\xe2*3\xe5\xac\x81g\x94\xc3\xe6\xa1-\x80\xbe\xf4_\xd2\xf3"

    list_0 = [bytes_0, bytes_0, bytes_0]

    module_0.get(list_0, list_0)





#record_3
def test_case_2():

    bool_0 = False

    set_0 = {bool_0}

    module_0.shortest_path_length(set_0, bool_0, set_0)





#record_4
def test_case_3():

    set_0 = set()

    var_0 = module_0.get(set_0, set_0)

    assert var_0 == 0

    bool_0 = False

    set_1 = {bool_0}

    module_0.shortest_path_length(set_1, bool_0, set_1)





#record_5
def test_case_4():

    bytes_0 = b"\xf5\x8c\xe5\xf0\x8c\xa2_\xcf\x9d\xbd\xcf\x88"

    set_0 = {bytes_0, bytes_0}

    tuple_0 = (set_0, set_0)

    module_0.insert_or_update(tuple_0, tuple_0)





#record_6
def test_case_5():

    str_0 = "omD1|%d}"

    bytes_0 = b"\x11_"

    tuple_0 = (bytes_0, bytes_0)

    tuple_1 = (tuple_0,)

    dict_0 = {str_0: str_0, str_0: str_0, tuple_1: tuple_0}

    module_0.insert_or_update(tuple_0, dict_0)





#record_7
def test_case_6():

    bool_0 = True

    tuple_0 = (bool_0, bool_0)

    set_0 = {tuple_0}

    none_type_0 = None

    var_0 = module_0.get(set_0, none_type_0)

    assert var_0 == 0

    tuple_1 = (bool_0, bool_0)

    module_0.shortest_path_length(bool_0, bool_0, tuple_1)





#record_8
def test_case_7():

    bool_0 = True

    tuple_0 = (bool_0, bool_0)

    set_0 = {tuple_0}

    var_0 = module_0.get(set_0, bool_0)

    assert var_0 is True

    var_1 = module_0.get(set_0, var_0)

    assert var_1 is True

    module_1.nsmallest(bool_0, bool_0)





#record_9
def test_case_8():

    bool_0 = False

    tuple_0 = (bool_0, bool_0)

    var_0 = module_0.shortest_path_length(tuple_0, bool_0, bool_0)

    assert var_0 == 0

    list_0 = [tuple_0, bool_0]

    var_1 = module_0.insert_or_update(list_0, tuple_0)

    var_2 = module_0.shortest_path_length(tuple_0, tuple_0, tuple_0)

    assert var_2 == 0

    module_0.insert_or_update(var_2, var_2)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import shortest_path_length as module_0

import heapq as module_1





#record_10
def test_case_0():

    none_type_0 = None

    var_0 = module_0.shortest_path_length(none_type_0, none_type_0, none_type_0)

    assert var_0 == 0


