# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import next_permutation as module_0





#record_1
def test_case_0():

    bytes_0 = b"\xe2\x01/E\x953;n\x99"

    var_0 = module_0.next_permutation(bytes_0)





#record_2
def test_case_1():

    list_0 = []

    var_0 = module_0.next_permutation(list_0)





#record_3
def test_case_2():

    none_type_0 = None

    module_0.next_permutation(none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import next_permutation as module_0





#record_4
def test_case_0():

    bytes_0 = b"\x9b1P\x19\xf5UA\x14\x9e\xf8\xa0F\xda\x9d\xfaQ\x84"

    var_0 = module_0.next_permutation(bytes_0)

    none_type_0 = None

    module_0.next_permutation(none_type_0)





#record_5
def test_case_1():

    int_0 = -2563

    list_0 = [int_0, int_0, int_0, int_0]

    var_0 = module_0.next_permutation(list_0)

    var_1 = module_0.next_permutation(list_0)

    module_0.next_permutation(var_0)





#record_6
def test_case_2():

    bool_0 = False

    module_0.next_permutation(bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import next_permutation as module_0





#record_7
def test_case_0():

    bytes_0 = b"XM\xc9\xef\\\xa8\xe4reR\x17\x0b\xb7\xf7\xb8\rn\xad~"

    var_0 = module_0.next_permutation(bytes_0)





#record_8
def test_case_1():

    complex_0 = 793.933 - 1441.02j

    tuple_0 = (complex_0,)

    var_0 = module_0.next_permutation(tuple_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import next_permutation as module_0





#record_9
def test_case_0():

    bool_0 = False

    set_0 = {bool_0, bool_0, bool_0}

    var_0 = module_0.next_permutation(set_0)

    bytes_0 = b"o\x92\x99\x97\x8b]h!\xf0"

    var_1 = module_0.next_permutation(bytes_0)





#record_10
def test_case_1():

    str_0 = "["

    dict_0 = {str_0: str_0, str_0: str_0}

    var_0 = module_0.next_permutation(dict_0)

    var_1 = module_0.next_permutation(dict_0)

    var_2 = module_0.next_permutation(str_0)


