# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import kheapsort as module_0

import builtins as module_1





#record_1
def test_case_0():

    bool_0 = True

    var_0 = module_0.kheapsort(bool_0, bool_0)





#record_2
def test_case_1():

    bool_0 = False

    var_0 = module_0.kheapsort(bool_0, bool_0)

    bool_1 = True

    list_0 = [bool_1, bool_1, bool_1]

    var_1 = module_0.kheapsort(bool_1, var_0)

    var_2 = module_0.kheapsort(bool_0, var_0)

    var_3 = module_0.kheapsort(var_1, var_2)

    none_type_0 = None

    var_4 = module_0.kheapsort(var_2, bool_1)

    var_5 = module_0.kheapsort(list_0, none_type_0)

    var_6 = module_0.kheapsort(var_5, bool_1)

    module_1.object(*var_5)





#record_3
def test_case_2():

    str_0 = "w_zM\x0b\\g}\ru+@&"

    var_0 = module_0.kheapsort(str_0, str_0)

    bool_0 = False

    var_1 = module_0.kheapsort(bool_0, bool_0)

    var_2 = module_0.kheapsort(var_1, bool_0)

    bool_1 = True

    list_0 = []

    var_3 = module_0.kheapsort(bool_0, var_1)

    none_type_0 = None

    var_4 = module_0.kheapsort(var_3, bool_1)

    var_5 = module_0.kheapsort(list_0, none_type_0)

    var_6 = module_0.kheapsort(var_5, bool_1)

    object_0 = module_1.object(*var_5)

    var_7 = module_0.kheapsort(var_5, object_0)

    bool_2 = False

    dict_0 = {bool_2: bool_2, bool_2: bool_2, bool_2: bool_2}

    str_1 = "af; dL)*^A"

    list_1 = [var_4, str_1, var_6]

    var_8 = module_0.kheapsort(list_1, var_6)

    var_9 = module_0.kheapsort(var_5, none_type_0)

    var_10 = module_0.kheapsort(var_5, bool_1)

    var_11 = module_0.kheapsort(bool_2, dict_0)

    var_12 = module_0.kheapsort(bool_0, var_6)

    var_13 = module_0.kheapsort(none_type_0, var_11)

    var_14 = module_0.kheapsort(bool_2, bool_2)

    var_15 = module_0.kheapsort(bool_2, dict_0)

    var_16 = module_0.kheapsort(var_11, var_9)

    var_17 = module_0.kheapsort(var_5, str_1)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import builtins as module_0

import kheapsort as module_1





#record_4
def test_case_0():

    object_0 = module_0.object()

    var_0 = module_1.kheapsort(object_0, object_0)





#record_5
def test_case_1():

    bool_0 = True

    list_0 = [bool_0]

    var_0 = module_1.kheapsort(list_0, bool_0)

    module_0.object(*var_0)





#record_6
def test_case_2():

    bool_0 = False

    none_type_0 = None

    var_0 = module_1.kheapsort(bool_0, none_type_0)

    list_0 = [bool_0]

    var_1 = module_1.kheapsort(list_0, bool_0)

    var_2 = module_1.kheapsort(bool_0, var_1)

    module_0.object(*var_1)





#record_7
def test_case_3():

    bool_0 = True

    list_0 = [bool_0, bool_0]

    none_type_0 = None

    var_0 = module_1.kheapsort(list_0, none_type_0)

    module_0.object(*var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import kheapsort as module_0





#record_8
def test_case_0():

    bool_0 = False

    var_0 = module_0.kheapsort(bool_0, bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import kheapsort as module_0

import builtins as module_1





#record_9
def test_case_0():

    bool_0 = True

    var_0 = module_0.kheapsort(bool_0, bool_0)





#record_10
def test_case_1():

    bytes_0 = b"\xcfe\xf4\xd0\x90\x0f\xfe\x1d\xd16\x00\xb1\xd9H\x88\x12\xa0j\xcc"

    list_0 = [bytes_0, bytes_0]

    none_type_0 = None

    var_0 = module_0.kheapsort(list_0, none_type_0)

    module_1.object(*var_0)
