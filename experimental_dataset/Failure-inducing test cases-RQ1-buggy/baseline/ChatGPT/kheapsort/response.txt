#PT
arr = []
k = 2
expected_output = []
assert list(kheapsort(arr, k)) == expected_output

#FT
arr = [3, 1]
k = 3
expected_output = [1, 3]
assert list(kheapsort(arr, k)) == expected_output

#FF
arr = [4, 2, 1, 5, 3]
k = 0
expected_output = []
assert list(kheapsort(arr, k)) == expected_output #error [4, 2, 1, 5, 3]

#FT
arr = [5, 2, 5, 1, 3, 2]
k = 3
expected_output = [1, 2, 2, 3, 5, 5]
assert list(kheapsort(arr, k)) == expected_output

#FC
arr = [-5, 2, 0, -1, 3, -2]
k = 3
expected_output = [-5, -2, -1, 0, 2, 3]
assert list(kheapsort(arr, k)) == expected_output #error [-5, -1, -2, 0, 2, 3]

#FT
arr = [4, 2, 1, 5, 3]
k = 5
expected_output = [1, 2, 3, 4, 5]
assert list(kheapsort(arr, k)) == expected_output

#FT
arr = [4, 2, 1, 5, 3]
k = 6
expected_output = [1, 2, 3, 4, 5]
assert list(kheapsort(arr, k)) == expected_output

#FT
arr = [4, 2, 1, 5, 3]
k = 4
expected_output = [1, 2, 3, 4, 5]
assert list(kheapsort(arr, k)) == expected_output

#FC
arr = [4, 2, 1, 5, 3]
k = 1
expected_output = [1, 2, 3, 4, 5]
assert list(kheapsort(arr, k)) == expected_output #error [2, 1, 4, 3, 5]

#FT
arr = [4, 2, 1, 5, 3]
k = len(arr)//2
expected_output = [1, 2, 3, 4, 5]
assert list(kheapsort(arr, k)) == expected_output
