#FF
digit_list = [9, 9, 1, 2, 3]
expected_output = [9, 9, 2, 0, 0]
assert next_palindrome(digit_list) == expected_output #error [9, 9, 2, 2, 3]

#FT
digit_list = [9, 9, 9, 9]
expected_output = [1, 0, 0, 0, 1]
assert next_palindrome(digit_list) == expected_output

#FC
digit_list = [9, 9, 9, 9, 9, 9]
expected_output = [1, 0, 0, 0, 0, 1]
assert next_palindrome(digit_list) == expected_output #error [1, 0, 0, 0, 0, 0, 1]

#FF
digit_list = [9, 9, 1, 0, 0]
expected_output = [9, 9, 1, 1, 9]
result = next_palindrome(digit_list)
assert result == expected_output, f"Error: {result} != {expected_output}" #error [9, 9, 2, 0, 0]

#PT
digit_list = [9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
expected_output = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
assert next_palindrome(digit_list) == expected_output #error [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

#FT
digit_list = [9, 9, 9, 9, 9, 9]
expected_output = [1, 0, 0, 0, 0, 0, 1]
assert next_palindrome(digit_list) == expected_output

#FT
digit_list = [9, 9, 9, 9, 9]
expected_output = [1, 0, 0, 0, 0, 1]
assert next_palindrome(digit_list) == expected_output

#FF
digit_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1]
expected_output = [1, 2, 3, 4, 5, 6, 7, 9, 9, 1]
assert next_palindrome(digit_list) == expected_output #error [1, 2, 3, 4, 6, 7, 7, 8, 9, 1]

#PT
digit_list = [1, 2, 9, 9, 2, 1]
expected_output = [1, 3, 0, 0, 3, 1]
assert next_palindrome(digit_list) == expected_output

#FF
digit_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]
expected_output = [1, 2, 3, 4, 6, 5, 4, 3, 2, 1]
assert next_palindrome(digit_list) == expected_output #error [1, 2, 3, 4, 6, 6, 7, 8, 9]