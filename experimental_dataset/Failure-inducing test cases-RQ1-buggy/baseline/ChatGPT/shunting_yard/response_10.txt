Test Case:
Input: tokens = ['(', 1, '+', 3, ')', '*', 5]
Expected Output: [1, 3, '+', 5, '*']

Explanation:
This test case involves arithmetic operations with parentheses. When the input tokens are passed to the 'shunting_yard' function, the left parenthesis '(' is encountered, and it is added to the 'opstack'. Then, the integer 1 is added to 'rpntokens'. Next, the plus sign '+' is encountered, and it has a lower precedence than '*', so it is added to the 'opstack'. The integer 3 is then added to the 'rpntokens' list. The closing parenthesis ')' is encountered next, and it is popped from the 'opstack', and the '+' is also popped and added to the 'rpntokens'. At this point, the '*' is encountered, and it has a higher precedence than '+', and it should be added to the 'opstack'. However, since the left parenthesis '(' was not popped from the stack earlier, it still remains in the 'opstack' causing the function to fail, resulting in a test failure.
