#FT
arr = [3, 5, 7, 9, 1, 3]
expectedoutput = [1, 3, 3, 5, 7, 9]
assert quicksort(arr) == expectedoutput

#PT
arr = [3, 9, 2, 7, 6, 8, 1, 0, 4, 5]
sorted_arr = quicksort(arr)
assert sorted_arr == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

#FF
arr = [1, 3, 5, 4, 2]
result = quicksort(arr)
assert result == [1, 2, 3, 4, 5, 6] #error [1, 2, 3, 4, 5]

#PT
arr = [1, 5, 2, 7, 3, 6, 4]
expectedoutput = [1, 2, 3, 4, 5, 6, 7]
assert quicksort(arr) == expectedoutput

#FT
arr = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3]
expectedoutput = [1, 1, 2, 3, 3, 4, 5, 5, 6, 9]
assert quicksort(arr) == expectedoutput

#PT
arr = [3, 5, 2, 7, 1, 4]
expected_result = [1, 2, 3, 4, 5, 7]
import random
random.shuffle(arr)
result = quicksort(arr)
assert result == expected_result, f"Result: {result}. Expected: {expected_result}"

#PT
arr = [3, 2, 1]
expectedoutput = [1, 2, 3]
assert quicksort(arr) == expectedoutput

#PT
arr = [3, 2, 1, 4, 5, 6]
expectedoutput = [1, 2, 3, 4, 5, 6]
assert quicksort(arr) == expectedoutput

#PT
arr = [1, 3, 2, 5, 4, 6, 7]
expected_output = [1, 2, 3, 4, 5, 6, 7]
assert quicksort(arr) == expected_output

#PT
arr = [4, 2, 8, 1, 9, 7]
expected_output = [1, 2, 4, 7, 8, 9]
assert quicksort(arr) == expected_output