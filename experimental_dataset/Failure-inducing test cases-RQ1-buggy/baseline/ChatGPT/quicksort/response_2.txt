Test case:

arr = [3, 9, 2, 7, 6, 8, 1, 0, 4, 5]
sorted_arr = quicksort(arr)
assert sorted_arr == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

Bug description:

The above program is a recursive implementation of the QuickSort algorithm. However, it only sorts the list if it has unique values. If the list has duplicate values, the algorithm fails to sort them properly.

In the provided test case, the input list has multiple duplicate values. During the recursive calls, the 'if x > pivot' and 'if x < pivot' conditions return False for some elements in the list, resulting in the same element being added to both the lesser and greater lists.

In the final sorted array, the duplicates are not sorted properly, breaking the QuickSort algorithm and resulting in a test failure.