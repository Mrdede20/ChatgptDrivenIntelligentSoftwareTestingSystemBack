The following code implements the Bellman-Ford algorithm, which efficiently calculates the shortest path from a source node to every other node in a directed graph that may contain negative edges. The function, `shortest_paths` takes in a source node (a starting node) and a dictionary of edge weights keyed by ordered pairs of node IDs. The function returns a dictionary mapping each node ID to the minimum weight of a path from the source node to that node. The implementation works by first initializing all node weights to infinity except for the source node, which gets a weight of 0. Then, the algorithm iteratively visits each node and edge, updating the minimum weights based on the current node and the weight of the edge. This is done iteratively `n-1` times to ensure a correct minimum path weight for each of the nodes.