The code is intended to find the number of distinct ways to make change adding up to `total` using only coins of the given denominations provided in the `coins` list. It uses a recursive approach to consider all possible combinations of coins that add up to the total value. It starts by checking if the total is zero, in which case there is only one way to make change. If the total is negative, there is no way to make change. If the total is positive, it considers the possibility of using the first coin in the list of coins by recursively calling `possible_change` on the reduced total value (total - first) and adding it to the possibilities of using the rest of the coins list.