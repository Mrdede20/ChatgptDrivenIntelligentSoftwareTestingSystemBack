The intention of the code is to find the number of distinct ways to make change for a given total using a set of coins with different values. The function takes in a list of coin denominations and the target total as input and returns the number of distinct ways to make change. It uses a recursive approach, where it attempts to add up each coin value in the list to the target total (one by one) and recursively calls the same function using the updated total (total-coin value) and the remaining coins (except the coin value just used). The base cases of recursion are when the total becomes zero (meaning we have found a valid combination of coins to make change) and when the total becomes negative (meaning the current combination of coins being tried is not valid). The function returns the count of all the valid combinations of coins encountered during the recursive calls.