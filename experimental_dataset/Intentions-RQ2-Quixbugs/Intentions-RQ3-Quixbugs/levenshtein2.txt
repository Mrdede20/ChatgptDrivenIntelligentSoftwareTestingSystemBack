The intention of the code is to calculate the Levenshtein Distance between two strings. The Levenshtein distance is defined as the minimum amount of single-character edits (either removing a character, adding a character, or changing a character) necessary to transform a source string into a target string. 

The function takes in two parameters, "source" and "target", which represent the two strings to be compared. If either string is empty, the function returns the length of the non-empty string. Otherwise, the function recursively calculates the Levenshtein distance between the two strings by comparing the first characters of the strings. 

If the first characters of the strings are the same, the function recursively calculates the distance between the rest of the strings. Otherwise, the function calculates the distance between the rest of the strings after adding, deleting, or substituting a character in the source string. The function then takes the minimum of the three possibilities and returns the result.