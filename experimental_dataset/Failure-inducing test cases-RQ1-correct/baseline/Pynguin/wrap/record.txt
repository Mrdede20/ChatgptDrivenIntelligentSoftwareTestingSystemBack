# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import wrap as module_0

import builtins as module_1





#record_1
def test_case_0():

    tuple_0 = ()

    float_0 = -2251.96

    module_0.wrap(tuple_0, float_0)





#record_2
def test_case_1():

    none_type_0 = None

    module_0.wrap(none_type_0, none_type_0)





#record_3
def test_case_2():

    tuple_0 = ()

    int_0 = 1545

    var_0 = module_0.wrap(tuple_0, int_0)





#record_4
def test_case_3():

    str_0 = ">4n\n@+U1CE&@|Vl"

    bool_0 = True

    var_0 = module_0.wrap(str_0, bool_0)

    object_0 = module_1.object()


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import wrap as module_0





#record_5
def test_case_0():

    bool_0 = False

    tuple_0 = (bool_0, bool_0)

    module_0.wrap(tuple_0, bool_0)





#record_6
def test_case_1():

    complex_0 = 310.6156 + 636.5901j

    module_0.wrap(complex_0, complex_0)





#record_7
def test_case_2():

    int_0 = 974

    bool_0 = False

    tuple_0 = (int_0, bool_0)

    var_0 = module_0.wrap(tuple_0, int_0)





#record_8
def test_case_3():

    bool_0 = True

    str_0 = 'vZZerq"8%<fX'

    var_0 = module_0.wrap(str_0, bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import wrap as module_0





#record_9
def test_case_0():

    str_0 = "[BV"

    bool_0 = True

    var_0 = module_0.wrap(str_0, bool_0)





#record_10
def test_case_1():

    bool_0 = True

    set_0 = {bool_0, bool_0, bool_0}

    var_0 = module_0.wrap(set_0, bool_0)



