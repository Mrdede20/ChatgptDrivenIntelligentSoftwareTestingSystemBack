# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import kth as module_0





#record_1
def test_case_0():

    str_0 = "l/<Tw\\M3,f#AMk*%J(D"

    module_0.kth(str_0, str_0)





#record_2
def test_case_1():

    complex_0 = 3199.767366 - 591.379063j

    module_0.kth(complex_0, complex_0)





#record_3
def test_case_2():

    str_0 = " ~CvP>.K:'o"

    bool_0 = True

    var_0 = module_0.kth(str_0, bool_0)

    assert var_0 == "'"

    module_0.kth(str_0, var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import kth as module_0

import builtins as module_1





#record_4
def test_case_0():

    str_0 = "\x0biR'."

    bool_0 = True

    var_0 = module_0.kth(str_0, bool_0)

    assert var_0 == "'"

    var_1 = module_1.object()

    module_0.kth(str_0, str_0)





#record_5
def test_case_1():

    str_0 = "O@Pwo"

    none_type_0 = None

    bool_0 = True

    var_0 = module_0.kth(str_0, bool_0)

    assert var_0 == "O"

    module_0.kth(none_type_0, str_0)





#record_6
def test_case_2():

    str_0 = "W,C*)V"

    module_0.kth(str_0, str_0)





#record_7
def test_case_3():

    none_type_0 = None

    module_0.kth(none_type_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import kth as module_0





#record_8
def test_case_0():

    bool_0 = False

    int_0 = 1128

    tuple_0 = (bool_0, int_0)

    list_0 = [tuple_0, bool_0]

    none_type_0 = None

    module_0.kth(list_0, none_type_0)





#record_9
def test_case_1():

    str_0 = "UnZMP\x0b[0\t\\[\x0cS\rRg.n"

    none_type_0 = None

    module_0.kth(str_0, none_type_0)





#record_10
def test_case_2():

    int_0 = -1168

    set_0 = {int_0}

    module_0.kth(set_0, int_0)



