# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import detect_cycle as module_0





#record_1
def test_case_0():

    none_type_0 = None

    var_0 = module_0.detect_cycle(none_type_0)

    assert var_0 is False

    module_0.detect_cycle(var_0)





#record_2
def test_case_1():

    str_0 = "\tzg#KbdtlU4>K"

    module_0.detect_cycle(str_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import detect_cycle as module_0





#record_3
def test_case_0():

    none_type_0 = None

    var_0 = module_0.detect_cycle(none_type_0)

    assert var_0 is False

    module_0.detect_cycle(var_0)





#record_4
def test_case_1():

    float_0 = 1220.1

    module_0.detect_cycle(float_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import detect_cycle as module_0





#record_5
def test_case_0():

    none_type_0 = None

    var_0 = module_0.detect_cycle(none_type_0)

    assert var_0 is False





#record_6
def test_case_1():

    bool_0 = True

    module_0.detect_cycle(bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import detect_cycle as module_0





#record_7
def test_case_0():

    none_type_0 = None

    var_0 = module_0.detect_cycle(none_type_0)

    assert var_0 is False

    module_0.detect_cycle(var_0)





#record_8
def test_case_1():

    set_0 = set()

    module_0.detect_cycle(set_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import detect_cycle as module_0





#record_9
def test_case_0():

    none_type_0 = None

    var_0 = module_0.detect_cycle(none_type_0)

    assert var_0 is False

    module_0.detect_cycle(var_0)





#record_10
def test_case_1():

    str_0 = "TXr}_vMZid{3`"

    module_0.detect_cycle(str_0)

