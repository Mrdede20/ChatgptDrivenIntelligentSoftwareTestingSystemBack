# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import hanoi as module_0





#record_1
def test_case_0():

    bool_0 = True

    var_0 = module_0.hanoi(bool_0)

    complex_0 = -861 + 1381j

    module_0.hanoi(complex_0)





#record_2
def test_case_1():

    int_0 = -400

    none_type_0 = None

    var_0 = module_0.hanoi(int_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import hanoi as module_0





#record_3
def test_case_0():

    bool_0 = True

    var_0 = module_0.hanoi(bool_0, end=bool_0)

    int_0 = -2321

    var_1 = module_0.hanoi(int_0, int_0)

    int_1 = 2676

    none_type_0 = None

    module_0.hanoi(int_1, none_type_0)





#record_4
def test_case_1():

    bool_0 = True

    set_0 = {bool_0, bool_0, bool_0, bool_0}

    module_0.hanoi(set_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import hanoi as module_0





#record_5
def test_case_0():

    bool_0 = True

    set_0 = {bool_0, bool_0}

    module_0.hanoi(bool_0, end=set_0)





#record_6
def test_case_1():

    bool_0 = False

    var_0 = module_0.hanoi(bool_0)

    var_1 = module_0.hanoi(bool_0, var_0)

    set_0 = {bool_0}

    module_0.hanoi(set_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import hanoi as module_0





#record_7
def test_case_0():

    bool_0 = True

    none_type_0 = None

    var_0 = module_0.hanoi(bool_0, end=none_type_0)





#record_8
def test_case_1():

    float_0 = 2446.95

    set_0 = {float_0, float_0, float_0}

    module_0.hanoi(set_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import hanoi as module_0





#record_9
def test_case_0():

    float_0 = 1712.318804

    module_0.hanoi(float_0)





#record_10
def test_case_1():

    bool_0 = False

    var_0 = module_0.hanoi(bool_0, end=bool_0)

    var_1 = module_0.hanoi(bool_0)

    module_0.hanoi(var_1, end=bool_0)

