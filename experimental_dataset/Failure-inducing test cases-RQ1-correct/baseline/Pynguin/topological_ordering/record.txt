# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import topological_ordering as module_0





#record_1
def test_case_0():

    list_0 = []

    var_0 = module_0.topological_ordering(list_0)





#record_2
def test_case_1():

    str_0 = "Qaw5sOIB_L"

    list_0 = [str_0, str_0]

    module_0.topological_ordering(list_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import topological_ordering as module_0





#record_3
def test_case_0():

    set_0 = set()

    var_0 = module_0.topological_ordering(set_0)





#record_4
def test_case_1():

    bytes_0 = b"\x14!"

    module_0.topological_ordering(bytes_0)





#record_5
def test_case_2():

    float_0 = -993.09598

    module_0.topological_ordering(float_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import topological_ordering as module_0





#record_6
def test_case_0():

    dict_0 = {}

    var_0 = module_0.topological_ordering(dict_0)





#record_7
def test_case_1():

    bytes_0 = b"$\xeb\xa8gT.r`\x05\xdd'\xf1\xad\x1b\xff+\xc1a\t!"

    module_0.topological_ordering(bytes_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import topological_ordering as module_0





#record_8
def test_case_0():

    dict_0 = {}

    var_0 = module_0.topological_ordering(dict_0)





#record_9
def test_case_1():

    set_0 = set()

    var_0 = module_0.topological_ordering(set_0)

    str_0 = "-oxIqq"

    module_0.topological_ordering(str_0)





#record_10
def test_case_2():

    none_type_0 = None

    module_0.topological_ordering(none_type_0)




