# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import gcd as module_0





#record_1
def test_case_0():

    int_0 = 1960

    var_0 = module_0.gcd(int_0, int_0)

    assert var_0 == 1960


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import gcd as module_0





#record_2
def test_case_0():

    bool_0 = True

    var_0 = module_0.gcd(bool_0, bool_0)

    assert var_0 is True

    none_type_0 = None

    module_0.gcd(none_type_0, none_type_0)





#record_3
def test_case_1():

    set_0 = set()

    module_0.gcd(set_0, set_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import gcd as module_0





#record_4
def test_case_0():

    int_0 = 1940

    var_0 = module_0.gcd(int_0, int_0)

    assert var_0 == 1940


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import gcd as module_0

import builtins as module_1





#record_5
def test_case_0():

    int_0 = 1735

    var_0 = module_0.gcd(int_0, int_0)

    assert var_0 == 1735

    var_1 = module_0.gcd(int_0, int_0)





#record_6
def test_case_1():

    object_0 = module_1.object()

    module_0.gcd(object_0, object_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import gcd as module_0





#record_7
def test_case_0():

    int_0 = 2148

    var_0 = module_0.gcd(int_0, int_0)

    assert var_0 == 2148

    dict_0 = {var_0: int_0, var_0: var_0}

    tuple_0 = (dict_0, var_0)

    module_0.gcd(tuple_0, var_0)





#record_8
def test_case_1():

    str_0 = "n;d"

    none_type_0 = None

    module_0.gcd(str_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import gcd as module_0





#record_9
def test_case_0():

    bool_0 = False

    var_0 = module_0.gcd(bool_0, bool_0)

    assert var_0 is False





#record_10
def test_case_1():

    bytes_0 = b"\xc6\x80"

    module_0.gcd(bytes_0, bytes_0)

