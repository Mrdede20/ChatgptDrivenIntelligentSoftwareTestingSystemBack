# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import longest_common_subsequence as module_0





#record_1
def test_case_0():

    bytes_0 = b"\x16\xe4+\xddm\x8d\x1c\x9b0\xa8\xdb\x80"

    module_0.longest_common_subsequence(bytes_0, bytes_0)





#record_2
def test_case_1():

    bool_0 = False

    none_type_0 = None

    var_0 = module_0.longest_common_subsequence(none_type_0, bool_0)

    assert var_0 == ""

    none_type_1 = None

    var_1 = module_0.longest_common_subsequence(none_type_1, bool_0)

    assert var_1 == ""

    list_0 = [bool_0]

    var_2 = module_0.longest_common_subsequence(list_0, none_type_1)

    assert var_2 == ""

    module_0.longest_common_subsequence(list_0, list_0)





#record_3
def test_case_2():

    bytes_0 = b"\xc2|\x10\x970\xe3\x01\x11Z9\x99\xca\xf2Z\xf0\x15\xa6\xffU"

    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}

    bool_0 = True

    tuple_0 = (set_0, bool_0, bool_0, bytes_0)

    module_0.longest_common_subsequence(tuple_0, bytes_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import longest_common_subsequence as module_0

import builtins as module_1





#record_4
def test_case_0():

    str_0 = "/"

    var_0 = module_0.longest_common_subsequence(str_0, str_0)

    assert var_0 == "/"





#record_5
def test_case_1():

    int_0 = -3632

    set_0 = set()

    int_1 = 2796

    dict_0 = {int_0: int_0, int_0: set_0, int_0: int_0, int_1: int_1}

    none_type_0 = None

    var_0 = module_0.longest_common_subsequence(dict_0, none_type_0)

    assert var_0 == ""





#record_6
def test_case_2():

    float_0 = 4001.0

    none_type_0 = None

    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)

    assert var_0 == ""

    var_1 = module_0.longest_common_subsequence(float_0, none_type_0)

    assert var_1 == ""

    none_type_1 = None

    var_2 = module_0.longest_common_subsequence(none_type_1, none_type_1)

    assert var_2 == ""

    var_3 = module_0.longest_common_subsequence(none_type_1, var_2)

    assert var_3 == ""

    var_4 = module_0.longest_common_subsequence(none_type_1, var_2)

    assert var_4 == ""

    var_5 = module_0.longest_common_subsequence(var_3, var_3)

    assert var_5 == ""

    var_6 = module_0.longest_common_subsequence(none_type_1, var_2)

    assert var_6 == ""

    set_0 = set()

    var_7 = module_0.longest_common_subsequence(var_2, none_type_1)

    assert var_7 == ""

    var_8 = module_0.longest_common_subsequence(set_0, set_0)

    assert var_8 == ""

    var_9 = module_0.longest_common_subsequence(var_8, var_8)

    assert var_9 == ""

    var_10 = module_0.longest_common_subsequence(var_6, set_0)

    assert var_10 == ""

    str_0 = '\x0c\\"(1AyY\\h(kq;'

    var_11 = module_0.longest_common_subsequence(var_7, str_0)

    assert var_11 == ""

    var_12 = module_0.longest_common_subsequence(var_4, set_0)

    assert var_12 == ""

    var_13 = module_0.longest_common_subsequence(var_7, var_9)

    assert var_13 == ""

    var_14 = module_0.longest_common_subsequence(var_2, str_0)

    assert var_14 == ""

    bytes_0 = b"\xcb^\x88y"

    var_15 = module_0.longest_common_subsequence(bytes_0, str_0)

    assert var_15 == ""

    object_0 = module_1.object()

    var_16 = module_0.longest_common_subsequence(var_15, object_0)

    assert var_16 == ""

    var_17 = module_0.longest_common_subsequence(none_type_1, var_11)

    var_18 = module_0.longest_common_subsequence(var_4, var_8)

    var_19 = module_0.longest_common_subsequence(none_type_1, var_17)

    var_20 = module_0.longest_common_subsequence(var_3, var_4)

    var_21 = module_0.longest_common_subsequence(set_0, var_9)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import longest_common_subsequence as module_0

import builtins as module_1





#record_7
def test_case_0():

    int_0 = 2140

    module_0.longest_common_subsequence(int_0, int_0)





#record_8
def test_case_1():

    none_type_0 = None

    var_0 = module_0.longest_common_subsequence(none_type_0, none_type_0)

    assert var_0 == ""





#record_9
def test_case_2():

    str_0 = "Ti\\$6an^syTe4"

    bool_0 = False

    var_0 = module_0.longest_common_subsequence(str_0, bool_0)

    assert var_0 == ""

    float_0 = 1808.85374

    module_0.longest_common_subsequence(float_0, float_0)





#record_10
def test_case_3():

    bytes_0 = b'"CV'

    module_0.longest_common_subsequence(bytes_0, bytes_0)



