# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import sieve as module_0





#record_1
def test_case_0():

    bool_0 = True

    var_0 = module_0.sieve(bool_0)

    dict_0 = {}

    module_0.sieve(dict_0)





#record_2
def test_case_1():

    str_0 = "ND1TjB]\x0czDl}G8"

    module_0.sieve(str_0)





#record_3
def test_case_2():

    int_0 = 1912

    var_0 = module_0.sieve(int_0)

    var_1 = module_0.sieve(int_0)

    var_2 = module_0.sieve(int_0)

    module_0.sieve(var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import sieve as module_0





#record_4
def test_case_0():

    int_0 = 1885

    var_0 = module_0.sieve(int_0)

    bytes_0 = b"\x84\x80\xf1\x01\xe8Pb\xb3v"

    int_1 = -461

    var_1 = module_0.sieve(int_1)

    module_0.sieve(bytes_0)





#record_5
def test_case_1():

    int_0 = -844

    var_0 = module_0.sieve(int_0)

    none_type_0 = None

    module_0.sieve(none_type_0)





#record_6
def test_case_2():

    float_0 = -328.749585

    module_0.sieve(float_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import sieve as module_0





#record_7
def test_case_0():

    int_0 = 73

    var_0 = module_0.sieve(int_0)





#record_8
def test_case_1():

    bool_0 = True

    var_0 = module_0.sieve(bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import sieve as module_0





#record_9
def test_case_0():

    int_0 = 617

    var_0 = module_0.sieve(int_0)





#record_10
def test_case_1():

    bool_0 = True

    var_0 = module_0.sieve(bool_0)



