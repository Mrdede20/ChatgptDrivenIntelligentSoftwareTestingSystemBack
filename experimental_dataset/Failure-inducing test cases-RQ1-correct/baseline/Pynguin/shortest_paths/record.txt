# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import shortest_paths as module_0





#record_1
def test_case_0():

    str_0 = ""

    var_0 = module_0.shortest_paths(str_0, str_0)





#record_2
def test_case_1():

    str_0 = ""

    var_0 = module_0.shortest_paths(str_0, str_0)

    module_0.shortest_paths(var_0, var_0)





#record_3
def test_case_2():

    bool_0 = False

    module_0.shortest_paths(bool_0, bool_0)





#record_4
def test_case_3():

    str_0 = ""

    str_1 = "S_"

    var_0 = module_0.shortest_paths(str_1, str_0)

    module_0.shortest_paths(str_0, var_0)





#record_5
def test_case_4():

    str_0 = ""

    str_1 = "__"

    var_0 = module_0.shortest_paths(str_1, str_0)

    var_1 = module_0.shortest_paths(str_1, var_0)

    module_0.shortest_paths(var_0, str_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import shortest_paths as module_0

import builtins as module_1





#record_6
def test_case_0():

    str_0 = ""

    var_0 = module_0.shortest_paths(str_0, str_0)





#record_7
def test_case_1():

    str_0 = ""

    var_0 = module_0.shortest_paths(str_0, str_0)

    module_0.shortest_paths(str_0, var_0)





#record_8
def test_case_2():

    object_0 = module_1.object()

    module_0.shortest_paths(object_0, object_0)





#record_9
def test_case_3():

    str_0 = ""

    str_1 = "H["

    var_0 = module_0.shortest_paths(str_1, str_0)

    module_0.shortest_paths(str_0, var_0)





#record_10
def test_case_4():

    str_0 = ""

    var_0 = module_0.shortest_paths(str_0, str_0)

    str_1 = "HH"

    var_1 = module_0.shortest_paths(str_1, str_0)

    var_2 = module_0.shortest_paths(str_0, var_1)

    str_2 = "SiQ<H?:0,bvs\x0c2#r+"

    none_type_0 = None

    module_0.shortest_paths(str_2, none_type_0)


