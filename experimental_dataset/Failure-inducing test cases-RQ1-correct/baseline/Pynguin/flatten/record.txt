# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import flatten as module_0

import builtins as module_1





#record_1
def test_case_0():

    none_type_0 = None

    var_0 = module_0.flatten(none_type_0)





#record_2
def test_case_1():

    bytes_0 = b"\t\xe9\xa4,\x1e\xc8\xbei\x11L)"

    var_0 = module_0.flatten(bytes_0)

    module_1.object(*var_0)





#record_3
def test_case_2():

    bytes_0 = b"\xeb\xe3\xbb\x93E\xc2n"

    str_0 = "846qs[mNivFT|.#J~"

    list_0 = [bytes_0, str_0, str_0]

    tuple_0 = (str_0, list_0)

    var_0 = module_0.flatten(tuple_0)

    module_1.object(*var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import flatten as module_0

import builtins as module_1





#record_4
def test_case_0():

    str_0 = 'EHx"b'

    var_0 = module_0.flatten(str_0)

    module_1.object(*var_0)





#record_5
def test_case_1():

    bytes_0 = b"\x17\xad\x99$TA"

    var_0 = module_0.flatten(bytes_0)





#record_6
def test_case_2():

    str_0 = "q$l6QfHv~>rdh{au/"

    bool_0 = False

    none_type_0 = None

    var_0 = module_0.flatten(none_type_0)

    list_0 = [str_0, str_0, bool_0, bool_0]

    tuple_0 = (bool_0, str_0, list_0)

    var_1 = module_0.flatten(tuple_0)

    module_1.object(*var_1)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import flatten as module_0

import builtins as module_1





#record_7
def test_case_0():

    none_type_0 = None

    var_0 = module_0.flatten(none_type_0)





#record_8
def test_case_1():

    bytes_0 = b"^\x80\x0c\xeeI\x1a\x1a\x00\xa9\xd2"

    var_0 = module_0.flatten(bytes_0)

    module_1.object(*var_0)





#record_9
def test_case_2():

    bytes_0 = b"\xb7\xee\x91\xe7\x1a\xe7["

    list_0 = [bytes_0]

    float_0 = 1134.21504

    bytes_1 = b"<=\xd0J`\xc0\x8da\x8a\x9do77@\xb5\xbf\x1ai"

    str_0 = "e}Y1,81)~aS=\\OG98qBM"

    bytes_2 = b"\xca\x92>\xb3\xc3\x92\xe6\x90\xa1\xa1y\xea"

    tuple_0 = (str_0, bytes_2)

    tuple_1 = (list_0, float_0, bytes_1, tuple_0)

    var_0 = module_0.flatten(tuple_1)

    module_1.object(*var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import flatten as module_0

import builtins as module_1





#record_10
def test_case_0():

    bytes_0 = b'\xe7A\xc1\x04"\xab\xcak\xce9\xa3\x17\xf7\x02\xad\x1c\xc1\xadW'

    var_0 = module_0.flatten(bytes_0)



