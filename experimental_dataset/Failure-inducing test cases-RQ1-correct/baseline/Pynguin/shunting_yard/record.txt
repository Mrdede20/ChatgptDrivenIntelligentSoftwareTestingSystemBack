# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import shunting_yard as module_0





#record_1
def test_case_0():

    str_0 = "~S:C9>?7"

    module_0.shunting_yard(str_0)





#record_2
def test_case_1():

    str_0 = "@"

    var_0 = module_0.shunting_yard(str_0)





#record_3
def test_case_2():

    bool_0 = True

    list_0 = [bool_0, bool_0]

    var_0 = module_0.shunting_yard(list_0)





#record_4
def test_case_3():

    str_0 = "//Z/SE+\x0bs|8-"

    module_0.shunting_yard(str_0)





#record_5
def test_case_4():

    str_0 = '-**>\r"XccTpg+t1{3%'

    module_0.shunting_yard(str_0)





#record_6
def test_case_5():

    str_0 = ""

    set_0 = {str_0}

    bool_0 = True

    tuple_0 = (set_0, bool_0, bool_0, bool_0)

    var_0 = module_0.shunting_yard(tuple_0)

    var_1 = module_0.shunting_yard(tuple_0)

    str_1 = '-*+*>\r"XccTpg+t1{3%'

    module_0.shunting_yard(str_1)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import shunting_yard as module_0





#record_7
def test_case_0():

    str_0 = 'be"E'

    module_0.shunting_yard(str_0)





#record_8
def test_case_1():

    list_0 = []

    var_0 = module_0.shunting_yard(list_0)





#record_9
def test_case_2():

    str_0 = "-+"

    var_0 = module_0.shunting_yard(str_0)





#record_10
def test_case_3():

    bytes_0 = b"\x1c\xaf\xb5\xa8x\xc3\xb8\xc9\xbb\xdb"

    var_0 = module_0.shunting_yard(bytes_0)



