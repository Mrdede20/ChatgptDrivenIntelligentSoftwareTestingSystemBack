# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import pascal as module_0





#record_1
def test_case_0():

    bool_0 = False

    var_0 = module_0.pascal(bool_0)





#record_2
def test_case_1():

    list_0 = []

    module_0.pascal(list_0)





#record_3
def test_case_2():

    bool_0 = False

    var_0 = module_0.pascal(bool_0)

    var_1 = module_0.pascal(bool_0)

    int_0 = 527

    var_2 = module_0.pascal(int_0)

    module_0.pascal(var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import pascal as module_0





#record_4
def test_case_0():

    bool_0 = True

    var_0 = module_0.pascal(bool_0)





#record_5
def test_case_1():

    int_0 = 510

    var_0 = module_0.pascal(int_0)

    var_1 = module_0.pascal(var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import pascal as module_0

import builtins as module_1





#record_6
def test_case_0():

    bool_0 = True

    var_0 = module_0.pascal(bool_0)





#record_7
def test_case_1():

    int_0 = 321

    var_0 = module_0.pascal(int_0)

    bool_0 = True

    var_1 = module_0.pascal(bool_0)

    var_2 = module_0.pascal(bool_0)

    module_1.object(*bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import pascal as module_0





#record_8
def test_case_0():

    int_0 = 397

    var_0 = module_0.pascal(int_0)

    module_0.pascal(var_0)





#record_9
def test_case_1():

    bool_0 = True

    var_0 = module_0.pascal(bool_0)

    float_0 = 1753.358725

    dict_0 = {float_0: float_0}

    module_0.pascal(dict_0)





#record_10
def test_case_2():

    list_0 = []

    module_0.pascal(list_0)


