# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import find_in_sorted as module_0





#record_1
def test_case_0():

    str_0 = "D.~"

    var_0 = module_0.find_in_sorted(str_0, str_0)

    assert var_0 == -1

    var_1 = module_0.find_in_sorted(str_0, str_0)

    assert var_1 == -1





#record_2
def test_case_1():

    bytes_0 = b"\xa6Kq\xf8\x1a5R\xee\x02\x92f{"

    module_0.find_in_sorted(bytes_0, bytes_0)





#record_3
def test_case_2():

    none_type_0 = None

    module_0.find_in_sorted(none_type_0, none_type_0)





#record_4
def test_case_3():

    float_0 = -685.732

    str_0 = "X\rc;ih\x0c3\x0cg18T^U[\r"

    tuple_0 = (float_0, str_0)

    bool_0 = False

    list_0 = [tuple_0, float_0, float_0, bool_0]

    var_0 = module_0.find_in_sorted(list_0, bool_0)

    assert var_0 == 3

    none_type_0 = None

    module_0.find_in_sorted(none_type_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import find_in_sorted as module_0





#record_5
def test_case_0():

    tuple_0 = ()

    var_0 = module_0.find_in_sorted(tuple_0, tuple_0)

    assert var_0 == -1

    module_0.find_in_sorted(var_0, var_0)





#record_6
def test_case_1():

    bool_0 = True

    list_0 = [bool_0, bool_0]

    var_0 = module_0.find_in_sorted(list_0, bool_0)

    assert var_0 == 1

    none_type_0 = None

    module_0.find_in_sorted(none_type_0, none_type_0)





#record_7
def test_case_2():

    bytes_0 = b"\xcfA4YL\x06\r\x88\xdc)w}"

    complex_0 = 168.567 + 2313.83j

    module_0.find_in_sorted(complex_0, bytes_0)





#record_8
def test_case_3():

    str_0 = "0@\x0cWm'"

    var_0 = module_0.find_in_sorted(str_0, str_0)

    assert var_0 == -1

    var_1 = module_0.find_in_sorted(str_0, str_0)

    assert var_1 == -1

    var_2 = module_0.find_in_sorted(str_0, str_0)

    assert var_2 == -1

    var_3 = module_0.find_in_sorted(str_0, str_0)

    assert var_3 == -1

    module_0.find_in_sorted(str_0, var_3)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import find_in_sorted as module_0





#record_9
def test_case_0():

    str_0 = '(T~TZy"3|dVw(d'

    var_0 = module_0.find_in_sorted(str_0, str_0)

    assert var_0 == -1

    none_type_0 = None

    module_0.find_in_sorted(none_type_0, str_0)





#record_10
def test_case_1():

    bytes_0 = b".,\x93"

    module_0.find_in_sorted(bytes_0, bytes_0)



