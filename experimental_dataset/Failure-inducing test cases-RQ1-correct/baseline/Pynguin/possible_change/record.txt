# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import possible_change as module_0





#record_1
def test_case_0():

    bool_0 = False

    var_0 = module_0.possible_change(bool_0, bool_0)

    assert var_0 == 1

    var_1 = module_0.possible_change(bool_0, bool_0)

    assert var_1 == 1

    var_2 = module_0.possible_change(bool_0, var_1)

    assert var_2 == 0

    none_type_0 = None

    var_3 = module_0.possible_change(none_type_0, var_1)

    assert var_3 == 0

    module_0.possible_change(var_1, var_1)





#record_2
def test_case_1():

    none_type_0 = None

    module_0.possible_change(none_type_0, none_type_0)





#record_3
def test_case_2():

    int_0 = -853

    var_0 = module_0.possible_change(int_0, int_0)

    assert var_0 == 0

    var_1 = module_0.possible_change(int_0, int_0)

    assert var_1 == 0

    bool_0 = False

    var_2 = module_0.possible_change(bool_0, bool_0)

    assert var_2 == 1

    var_3 = module_0.possible_change(int_0, var_1)

    assert var_3 == 1

    var_4 = module_0.possible_change(bool_0, bool_0)

    assert var_4 == 1

    var_5 = module_0.possible_change(var_0, bool_0)

    assert var_5 == 1

    list_0 = [bool_0]

    var_6 = module_0.possible_change(list_0, bool_0)

    assert var_6 == 1

    module_0.possible_change(list_0, list_0)





#record_4
def test_case_3():

    bool_0 = True

    module_0.possible_change(bool_0, bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import possible_change as module_0





#record_5
def test_case_0():

    none_type_0 = None

    bytes_0 = b"\xec\x8dT\x8eO{\xef"

    bool_0 = False

    var_0 = module_0.possible_change(none_type_0, bool_0)

    assert var_0 == 1

    module_0.possible_change(none_type_0, bytes_0)





#record_6
def test_case_1():

    int_0 = -4759

    list_0 = [int_0, int_0, int_0]

    module_0.possible_change(list_0, list_0)





#record_7
def test_case_2():

    float_0 = -593.01338

    var_0 = module_0.possible_change(float_0, float_0)

    assert var_0 == 0

    var_1 = module_0.possible_change(var_0, var_0)

    assert var_1 == 1

    bool_0 = False

    var_2 = module_0.possible_change(bool_0, bool_0)

    assert var_2 == 1

    list_0 = [bool_0, bool_0, bool_0]

    module_0.possible_change(bool_0, list_0)





#record_8
def test_case_3():

    str_0 = "Ri1go9u#"

    int_0 = 381

    int_1 = 4417

    tuple_0 = (str_0, int_0, int_0, int_1)

    module_0.possible_change(tuple_0, int_1)





#record_9
def test_case_4():

    bool_0 = False

    var_0 = module_0.possible_change(bool_0, bool_0)

    assert var_0 == 1

    var_1 = module_0.possible_change(bool_0, var_0)

    assert var_1 == 0

    module_0.possible_change(var_0, var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import possible_change as module_0





#record_10
def test_case_0():

    bool_0 = False

    var_0 = module_0.possible_change(bool_0, bool_0)

    assert var_0 == 1

    var_1 = module_0.possible_change(bool_0, bool_0)

    assert var_1 == 1

    var_2 = module_0.possible_change(bool_0, var_1)

    assert var_2 == 0

    none_type_0 = None

    module_0.possible_change(bool_0, none_type_0)



