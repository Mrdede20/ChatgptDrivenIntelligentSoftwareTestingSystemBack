# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import quicksort as module_0





#record_1
def test_case_0():

    str_0 = "/_az)*+9!SL"

    var_0 = module_0.quicksort(str_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import quicksort as module_0





#record_2
def test_case_0():

    int_0 = -3631

    module_0.quicksort(int_0)





#record_3
def test_case_1():

    bool_0 = False

    var_0 = module_0.quicksort(bool_0)





#record_4
def test_case_2():

    bytes_0 = b"\xed}p\xb6v\x00\xe8\x8b"

    var_0 = module_0.quicksort(bytes_0)

    none_type_0 = None

    var_1 = module_0.quicksort(none_type_0)





#record_5
def test_case_3():

    complex_0 = 146.6979 + 438j

    tuple_0 = (complex_0,)

    var_0 = module_0.quicksort(tuple_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import quicksort as module_0





#record_6
def test_case_0():

    bool_0 = True

    module_0.quicksort(bool_0)





#record_7
def test_case_1():

    none_type_0 = None

    var_0 = module_0.quicksort(none_type_0)

    var_1 = module_0.quicksort(var_0)





#record_8
def test_case_2():

    str_0 = "1zTj)vfA("

    var_0 = module_0.quicksort(str_0)

    bool_0 = False

    var_1 = module_0.quicksort(bool_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import quicksort as module_0





#record_9
def test_case_0():

    bool_0 = False

    list_0 = [bool_0, bool_0, bool_0]

    var_0 = module_0.quicksort(list_0)

    var_1 = module_0.quicksort(var_0)





#record_10
def test_case_1():

    bool_0 = False

    var_0 = module_0.quicksort(bool_0)



