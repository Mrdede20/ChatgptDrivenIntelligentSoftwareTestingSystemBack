# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import to_base as module_0

import builtins as module_1





#record_1
def test_case_0():

    int_0 = 3498

    var_0 = module_0.to_base(int_0, int_0)

    assert var_0 == "10"

    var_1 = var_0.__repr__()

    assert var_1 == "'10'"

    var_2 = module_0.to_base(int_0, int_0)

    assert var_2 == "10"

    var_2.__getitem__(var_2)





#record_2
def test_case_1():

    bool_0 = False

    var_0 = module_0.to_base(bool_0, bool_0)

    assert var_0 == ""

    var_0.__ror__(var_0)





#record_3
def test_case_2():

    object_0 = module_1.object()

    bytes_0 = b""

    module_0.to_base(bytes_0, object_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import to_base as module_0





#record_4
def test_case_0():

    int_0 = 547

    var_0 = module_0.to_base(int_0, int_0)

    assert var_0 == "10"

    var_0.__missing__(var_0)





#record_5
def test_case_1():

    bool_0 = False

    var_0 = module_0.to_base(bool_0, bool_0)

    assert var_0 == ""





#record_6
def test_case_2():

    none_type_0 = None

    module_0.to_base(none_type_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import to_base as module_0

import re as module_1





#record_7
def test_case_0():

    int_0 = 1419

    var_0 = module_0.to_base(int_0, int_0)

    assert var_0 == "10"

    bool_0 = True

    var_1 = module_0.to_base(bool_0, int_0)

    assert var_1 == "1"

    module_1.search(int_0, int_0, int_0)





#record_8
def test_case_1():

    bool_0 = False

    var_0 = module_0.to_base(bool_0, bool_0)

    assert var_0 == ""

    var_1 = module_0.to_base(bool_0, bool_0)

    assert var_1 == ""

    var_2 = module_0.to_base(bool_0, var_1)

    assert var_2 == ""

    var_2.__repr__(var_1)





#record_9
def test_case_2():

    none_type_0 = None

    module_0.to_base(none_type_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import to_base as module_0

import re as module_1





#record_10
def test_case_0():

    int_0 = -4488

    none_type_0 = None

    var_0 = module_0.to_base(int_0, none_type_0)

    assert var_0 == ""


