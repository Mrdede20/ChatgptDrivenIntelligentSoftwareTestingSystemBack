# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import kheapsort as module_0

import builtins as module_1





#record_1
def test_case_0():

    bool_0 = True

    var_0 = module_0.kheapsort(bool_0, bool_0)





#record_2
def test_case_1():

    list_0 = []

    none_type_0 = None

    var_0 = module_0.kheapsort(list_0, none_type_0)

    var_1 = module_0.kheapsort(var_0, list_0)

    object_0 = module_1.object(*var_0)





#record_3
def test_case_2():

    bool_0 = False

    list_0 = [bool_0]

    none_type_0 = None

    var_0 = module_0.kheapsort(list_0, none_type_0)

    module_1.object(*var_0)





#record_4
def test_case_3():

    bool_0 = False

    list_0 = [bool_0, bool_0, bool_0, bool_0]

    none_type_0 = None

    var_0 = module_0.kheapsort(list_0, none_type_0)

    module_1.object(*var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import kheapsort as module_0

import builtins as module_1





#record_5
def test_case_0():

    int_0 = -587

    var_0 = module_0.kheapsort(int_0, int_0)





#record_6
def test_case_1():

    int_0 = -568

    list_0 = []

    var_0 = module_0.kheapsort(list_0, int_0)

    object_0 = module_1.object(*var_0)





#record_7
def test_case_2():

    int_0 = -568

    list_0 = [int_0]

    var_0 = module_0.kheapsort(list_0, int_0)

    var_1 = module_0.kheapsort(list_0, int_0)

    module_1.object(*var_1)





#record_8
def test_case_3():

    int_0 = 470

    list_0 = [int_0]

    var_0 = module_0.kheapsort(list_0, int_0)

    module_1.object(*var_0)





#record_9
def test_case_4():

    int_0 = 446

    list_0 = [int_0, int_0]

    var_0 = module_0.kheapsort(list_0, int_0)

    var_1 = module_0.kheapsort(int_0, int_0)

    var_2 = module_0.kheapsort(var_0, int_0)

    module_1.object(*var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import kheapsort as module_0

import builtins as module_1





#record_10
def test_case_0():

    int_0 = -232

    var_0 = module_0.kheapsort(int_0, int_0)



