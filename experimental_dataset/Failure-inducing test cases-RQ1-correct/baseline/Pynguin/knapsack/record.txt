# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import knapsack as module_0





#record_1
def test_case_0():

    str_0 = 'jx83L"L=l'

    module_0.knapsack(str_0, str_0)





#record_2
def test_case_1():

    set_0 = set()

    module_0.knapsack(set_0, set_0)





#record_3
def test_case_2():

    str_0 = "^V"

    list_0 = [str_0, str_0]

    bool_0 = False

    var_0 = module_0.knapsack(bool_0, list_0)

    assert var_0 == 0





#record_4
def test_case_3():

    str_0 = "^V"

    list_0 = [str_0, str_0]

    bool_0 = True

    module_0.knapsack(bool_0, list_0)





#record_5
def test_case_4():

    int_0 = 449

    list_0 = [int_0, int_0]

    tuple_0 = (list_0, list_0)

    var_0 = module_0.knapsack(int_0, tuple_0)

    assert var_0 == 449

    bool_0 = True

    none_type_0 = None

    module_0.knapsack(bool_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import knapsack as module_0





#record_6
def test_case_0():

    bytes_0 = b""

    list_0 = [bytes_0]

    var_0 = module_0.knapsack(bytes_0, bytes_0)

    assert var_0 == 0

    module_0.knapsack(list_0, list_0)





#record_7
def test_case_1():

    bytes_0 = b")"

    none_type_0 = None

    module_0.knapsack(bytes_0, none_type_0)





#record_8
def test_case_2():

    bool_0 = False

    int_0 = 1667

    set_0 = {int_0, int_0, bool_0, bool_0}

    list_0 = [set_0, int_0]

    module_0.knapsack(bool_0, list_0)





#record_9
def test_case_3():

    bool_0 = True

    int_0 = 1667

    set_0 = {int_0, int_0, bool_0, bool_0}

    list_0 = [set_0, int_0]

    module_0.knapsack(bool_0, list_0)





#record_10
def test_case_4():

    bytes_0 = b""

    var_0 = module_0.knapsack(bytes_0, bytes_0)

    assert var_0 == 0

    bool_0 = True

    int_0 = 569

    set_0 = {int_0, int_0, bool_0, bool_0}

    list_0 = [set_0, int_0]

    module_0.knapsack(bool_0, list_0)


