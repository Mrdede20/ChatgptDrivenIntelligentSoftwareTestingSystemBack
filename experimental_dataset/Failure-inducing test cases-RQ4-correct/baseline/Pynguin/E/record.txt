# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import E as module_0

import builtins as module_1





#record_1
def test_case_0():

    bool_0 = True

    module_0.E(bool_0, bool_0, bool_0)





#record_2
def test_case_1():

    bool_0 = False

    module_0.E(bool_0, bool_0, bool_0)





#record_3
def test_case_2():

    object_0 = module_1.object()

    module_0.E(object_0, object_0, object_0)





#record_4
def test_case_3():

    int_0 = -991

    tuple_0 = (int_0, int_0)

    var_0 = module_0.E(int_0, int_0, tuple_0)

    assert var_0 == 0





#record_5
def test_case_4():

    int_0 = -1004

    tuple_0 = (int_0, int_0)

    int_1 = 718

    module_0.E(int_0, int_1, tuple_0)





#record_6
def test_case_5():

    int_0 = -1

    tuple_0 = (int_0, int_0)

    bool_0 = True

    var_0 = module_0.E(int_0, bool_0, tuple_0)

    assert var_0 == 0





#record_7
def test_case_6():

    int_0 = 0

    tuple_0 = (int_0, int_0)

    bool_0 = True

    module_0.E(int_0, bool_0, tuple_0)





#record_8
def test_case_7():

    int_0 = -1

    object_0 = module_1.object()

    bool_0 = True

    bool_1 = True

    str_0 = "0eb<"

    complex_0 = -2108.645897 + 838.55583j

    tuple_0 = (bool_0, bool_1, str_0, complex_0)

    module_0.E(int_0, bool_0, tuple_0)





#record_9
def test_case_8():

    int_0 = -1

    tuple_0 = (int_0, int_0)

    int_1 = 1188

    bool_0 = True

    none_type_0 = None

    var_0 = module_0.E(int_0, bool_0, tuple_0)

    assert var_0 == 0

    list_0 = [var_0]

    var_1 = module_0.E(int_0, bool_0, list_0)

    assert var_1 == 0

    module_0.E(none_type_0, int_0, int_1)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import E as module_0

import builtins as module_1





#record_10
def test_case_0():

    bool_0 = True

    module_0.E(bool_0, bool_0, bool_0)


