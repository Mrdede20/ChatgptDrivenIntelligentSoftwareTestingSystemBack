# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import B as module_0





#record_1
def test_case_0():

    bool_0 = False

    none_type_0 = None

    var_0 = module_0.B(bool_0, bool_0, none_type_0)

    var_1 = module_0.B(bool_0, bool_0, bool_0)

    float_0 = 2859.95

    module_0.B(float_0, float_0, float_0)





#record_2
def test_case_1():

    int_0 = -752

    var_0 = module_0.B(int_0, int_0, int_0)





#record_3
def test_case_2():

    bool_0 = True

    bytes_0 = b"B\x03\x03\x9c\x0b>n\x01\x0c\x91d\x8aU"

    module_0.B(bool_0, bool_0, bytes_0)





#record_4
def test_case_3():

    int_0 = 16

    str_0 = "-HILz4@>@0O"

    var_0 = module_0.B(int_0, str_0, str_0)

    module_0.B(int_0, var_0, var_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import B as module_0





#record_5
def test_case_0():

    bool_0 = True

    none_type_0 = None

    module_0.B(bool_0, bool_0, none_type_0)





#record_6
def test_case_1():

    bool_0 = False

    none_type_0 = None

    var_0 = module_0.B(bool_0, none_type_0, none_type_0)

    var_1 = module_0.B(bool_0, bool_0, bool_0)





#record_7
def test_case_2():

    bytes_0 = b"\xb8-s6"

    none_type_0 = None

    module_0.B(none_type_0, bytes_0, bytes_0)





#record_8
def test_case_3():

    int_0 = 696

    float_0 = 3608.716518

    set_0 = {int_0, int_0}

    none_type_0 = None

    module_0.B(float_0, none_type_0, set_0)





#record_9
def test_case_4():

    str_0 = "_d}0u(c"

    int_0 = 207

    float_0 = 3608.716518

    set_0 = module_0.B(float_0, int_0, str_0)

    none_type_0 = None

    module_0.B(str_0, set_0, none_type_0)


# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).

# Please check them before you use them.

import B as module_0

import builtins as module_1





#record_10
def test_case_0():

    bool_0 = True

    dict_0 = {bool_0: bool_0, bool_0: bool_0}

    module_0.B(bool_0, bool_0, dict_0)



